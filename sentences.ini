[GetTime]
what time is it
tell me the time

[GetTemperature]
whats the temperature
how (hot | cold) is it

[GetGarageState]
is the garage door (open | closed)

[ChangeLightState]
light_name = ((living room lamp | garage light) {name}) | <ChangeLightColor.light_name>
light_state = (on | off) {state}

turn <light_state> [the] <light_name>
turn [the] <light_name> <light_state>

[ChangeLightColor]
light_name = (bedroom light) {name}
color = (red | green | blue) {color}

set [the] <light_name> [to] <color>
make [the] <light_name> <color>

[Hello]
hello world

[Terminal]
cmd=(terminal){cmd:gnome-terminal}
(launch | open | run) (<cmd>)

[OpeningWords]
start = [(can you | please)] [please]
end = [for] [me]

[Media]
status = (resume | stop | mute | pause | next | previous | last | play) {status}
:<OpeningWords.start> <status> (music | song | media) <OpeningWords.end>
:<OpeningWords.start> :change <status> <OpeningWords.end>

[ActionWord]
action = (increase | raise:increase | up:increase | decrease | down:decrease) {action}

[Brightness]
# increase/decrease brightness
<ActionWord.action> brightness

bright = (0..100){brightness} [for me]
(increase | set | raise) brightness to <bright>


[Volume]
object = (sound | voice | volume)
\[<OpeningWords.start>] <ActionWord.action> <object> [<OpeningWords.end>]

sound = (0..100){sound}
(increase | set | raise) <object> to <sound>


[RandomNumber]
:give random number

#[IncreaseBrightness]
#:please (increase | raise) brightness

#[DecreaseBrightness]
#:please (decrease | raise) brightness

[CheckWeather]
(how | What) is the weather :today :outside
tell me [the] [today] weather

[RainSnow]
Is it going [to] rain [outside]?
Is outside (rain | rainy)
is it rainy

[location]
where is (delhi | mumbai)

[test]
open (google | youtube)

[Time]
what time is it
:please tell time
(display | show | output) [me] time
\[I want] [to] know the [current] time

[Date]
(what | whats) [the] date [is] [it]
\[please] tell date
(display | show | output) :me date
\[I want] [to] know the :current date

[Timer]
[please] [lets] (start | launch) timer
(I want | can) you :to :please start timer

[StopWatch]
\[please] [lets] (start | launch) (stop watch | stopwatch)
(I want | can) you [to] [please] start (stop watch | stopwatch)

[BluetoothOn]
(turn | switch) on (bluetooth | blue tooth)
(bluetooth | blue tooth) on

[BluetoothOff]
(turn | switch) off (bluetooth | blue tooth)
(bluetooth | blue tooth) off

[CoinFlip]
<OpeningWords.start> flip coin <OpeningWords.end>

[RollDice]
:<OpeningWords.start> roll [a] dice <OpeningWords.end>


[SetTimer]
hour_expr = (1..9){hours} [and (a half){minutes:30!int}] (hour | hours)
minute_expr = (1..59){minutes} [and (a half){seconds:30!int}] (minute | minutes)
second_expr = (1..59){seconds} (second | seconds)

time_expr = ((<hour_expr> [[and] <minute_expr>] [[and] <second_expr>]) | (<minute_expr> [[and] <second_expr>]) | <second_expr>)

set [a] timer for <time_expr>